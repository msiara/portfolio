{"version":3,"sources":["webpack:///./src/components/index.js","webpack:///./src/theme.js","webpack:///./src/pages/index.js","webpack:///./src/assets/avatar.png"],"names":["Button","styled","ButtonRaw","withConfig","displayName","componentId","props","theme","colors","primaryDark","primaryLight","Github","GithubRaw","text","GlobalStyle","createGlobalStyle","_templateObject","Layout","Flex","LinkedIn","LinkedinRaw","Panel","Box","background","__webpack_require__","d","__webpack_exports__","query","Index","_ref","data","react_default","a","createElement","styled_components_browser_esm","react","Helmet","lang","site","siteMetadata","title","name","content","description","href","rel","dist","mt","justifyContent","alt","borderRadius","height","src","Avatar","p","mb","textAlign","fullName","links","mail","Envelope","size","profession","location","mr","github","components_Github","linkedIn","propTypes","PropTypes","shape","string","isRequired","module","exports"],"mappings":"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","file":"component---src-pages-index-js-eecf385137c09f528738.js","sourcesContent":["import { Box, Button as ButtonRaw, Flex } from 'rebass';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Github as GithubRaw, Linkedin as LinkedinRaw } from 'styled-icons/fa-brands';\n\nexport const Button = styled(ButtonRaw)`\n  background-color: ${props => props.theme.colors.primaryDark};\n  cursor: pointer;\n  transition: background-color .2s ease;\n  \n  :hover {\n   background-color: ${props => props.theme.colors.primaryLight};\n  }\n`;\n\nexport const Github = styled(GithubRaw)`\n  color: ${props => props.theme.colors.text};\n  transition: opacity .2s ease;\n\n  &:hover {\n    opacity: .5;\n  }\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    background-image: linear-gradient(\n      to top,\n      ${props => props.theme.colors.primaryLight} 0%,\n      ${props => props.theme.colors.primaryDark} 100%\n    );\n  }\n  \n  body {\n    font-family: 'Roboto', sans-serif;\n    margin: 0;\n  }\n`;\n\nexport const Layout = styled(Flex)`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n`;\n\nexport const LinkedIn = styled(LinkedinRaw)`\n  color: ${props => props.theme.colors.text};\n  transition: opacity .2s ease;\n\n  &:hover {\n    opacity: .5;\n  }\n`;\n\nexport const Panel = styled(Box)`\n  background-color: ${props => props.theme.colors.background};\n  border-radius: 16px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, .2), 0 8px 8px rgba(0, 0, 0, .2);\n  max-width: calc(100vw - 16px);\n  width: 512px;\n`;\n","const theme = {\n  colors: {\n    background: '#FFF',\n    primaryDark: '#1E3C72',\n    primaryLight: '#2A5298',\n    text: '#000',\n  },\n};\n\nexport default theme;\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box, Flex, Heading, Image, Link, Text,\n} from 'rebass';\nimport { ThemeProvider } from 'styled-components';\nimport { Envelope } from 'styled-icons/fa-solid';\nimport Avatar from '../assets/avatar.png';\nimport {\n  Button, Github, GlobalStyle, Layout, LinkedIn, Panel,\n} from '../components';\nimport theme from '../theme';\n\nconst Index = ({ data }) => (\n  <ThemeProvider theme={theme}>\n    <Fragment>\n      <GlobalStyle />\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{data.site.siteMetadata.title}</title>\n        <meta name=\"description\" content={data.site.siteMetadata.description} />\n        <link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\" />\n      </Helmet>\n      <Layout>\n        <Panel>\n          <Box mt={-64}>\n            <Flex justifyContent=\"center\">\n              <Image\n                alt=\"avatar\"\n                borderRadius=\"50%\"\n                height={128}\n                src={Avatar}\n              />\n            </Flex>\n          </Box>\n          <Box p={32}>\n            <Heading mb={16} textAlign=\"center\">\n              {data.site.siteMetadata.fullName}\n            </Heading>\n            <Flex justifyContent=\"center\" mb={16}>\n              <Link href={data.site.siteMetadata.links.mail}>\n                <Button>\n                  <Envelope size={16} />\n                  {' '}\n                  Contact me\n                </Button>\n              </Link>\n            </Flex>\n            <Text mb={16} textAlign=\"center\">\n              {data.site.siteMetadata.profession}\n            </Text>\n            <Text mb={32} textAlign=\"center\">\n              {data.site.siteMetadata.location}\n            </Text>\n            <Flex justifyContent=\"center\">\n              <Box mr={32}>\n                <Link title=\"Github\" href={data.site.siteMetadata.links.github}>\n                  <Github size={32} />\n                </Link>\n              </Box>\n              <Link title=\"LinkedIn\" href={data.site.siteMetadata.links.linkedIn}>\n                <LinkedIn size={32} />\n              </Link>\n            </Flex>\n          </Box>\n        </Panel>\n      </Layout>\n    </Fragment>\n  </ThemeProvider>\n);\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        description: PropTypes.string.isRequired,\n        fullName: PropTypes.string.isRequired,\n        links: PropTypes.shape({\n          github: PropTypes.string.isRequired,\n          linkedIn: PropTypes.string.isRequired,\n          mail: PropTypes.string.isRequired,\n        }),\n        location: PropTypes.string.isRequired,\n        profession: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        description\n        fullName\n        links {\n          github\n          linkedIn\n          mail\n        }\n        location\n        profession\n        title\n      }\n    }\n  }\n`;\n\nexport default Index;\n","module.exports = __webpack_public_path__ + \"static/avatar-c213c5d4835eac774a6bdaf429f5d9b4.png\";"],"sourceRoot":""}